function sum(xPromise, yPromise) {
    // `Promise.all([ .. ])` принимает массив промисов,
    // и возвращает новый промис, который ожидает
    // разрешения всех промисов, которые были в массиве
    return Promise.all([xPromise, yPromise])
    // когда этот промис будет разрешён, возьмём
    // полученные значения `X` и `Y` и суммируем их.
    .then(function(values){
        // `values` - это массив сообщений из ранее
        // разрешённых промисов
        return values[0] + values[1];
    } );
}
// `fetchX()` и `fetchY()` возвращают промисы для
// соответствующих значений. Эти значения могут быть
// доступны *сейчас* или *позже*.
sum(fetchX(), fetchY())
// получаем промис для сложения этих
// двух чисел.
// теперь мы используем вызов `then(...)` для организации ожидания
// разрешения этого возвращённого промиса.
.then(function(sum){
    console.log(sum);
});

sum(fetchX(), fetchY())
.then(
    // обработчик успешного разрешения промиса
    function(sum) {
        console.log( sum );
    },
    // обработчик отклонения промиса
    function(err) {
        console.error( err );
        // что-то пошло не так
    }
);

sum(fetchX(), fetchY())

__.then(

__// обработчик успешного разрешения промиса 

____function(sum) { 

______ console.log( sum ); 

____}, // если функция не выполняется - она отклоняется

____ // обработчик отклонения промиса ____function(err) {

______console.error( err ); 

______// что-то пошло не так 

____}

__); // then  end